<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mhf.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.mhf.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="question" jdbcType="VARCHAR" property="question"/>
        <result column="answer" jdbcType="VARCHAR" property="answer"/>
        <result column="role" jdbcType="INTEGER" property="role"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.mhf.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user (id, username, password,
        email, phone, question,
        answer, role, create_time,
        update_time)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
        #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
        now())
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.mhf.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        set
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        question = #{question,jdbcType=VARCHAR},
        answer = #{answer,jdbcType=VARCHAR},
        role = #{role,jdbcType=INTEGER},
        update_time = now()
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, username, password, email, phone, question, answer, role, create_time,
        update_time
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, username, password, email, phone, question, answer, role, create_time,
        update_time
        from user
    </select>

    <!-- 检查用户名是否存在 -->
    <select id="checkUsername" parameterType="string" resultType="int">
        select count(1) from user where username = #{username}
    </select>
    <!-- 根据用户名密码查询用户信息 -->
    <select id="selectUserByUsernameAndPassword" parameterType="map" resultMap="BaseResultMap">
        select  id, username, password, email, phone, question, answer, role, create_time,
        update_time from user where username = #{username} and password = #{password};
    </select>

    <!-- 检查邮箱是否存在 -->
    <select id="checkEmail" parameterType="string" resultType="int">
        select count(1) from user where email = #{email}
    </select>

    <!-- 通过用户名查找密保问题 -->
    <select id="selectQuestionByUsername" parameterType="string" resultType="string">
        select question from user where username = #{username}
    </select>

    <!-- 验证密保答案 -->
    <select id="checkAnswer" parameterType="map" resultType="int">
        select count(1) from user where username = #{username} and question = #{question} and answer = #{answer}
    </select>

    <!-- 修改密码 -->
    <update id="updatePassword" parameterType="string">
        update user set password = #{password},update_time = now() where username = #{username};
    </update>

    <!-- 更新用户信息 -->
    <update id="updateInformation" parameterType="com.mhf.pojo.User">
       update user
       <set>
           <if test="email != null">
               email = #{email,jdbcType=VARCHAR},
           </if>
           <if test="phone != null">
               phone = #{phone,jdbcType=VARCHAR},
           </if>
           <if test="question != null">
               question = #{question,jdbcType=VARCHAR},
           </if>
           <if test="answer != null">
               answer = #{answer,jdbcType=VARCHAR},
           </if>
        update_time = now()
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>



</mapper>